/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface components {
  schemas: {
    /**
     * ComponentType
     * @description Enum used to store the component types.
     * @enum {string}
     */
    ComponentType: 'datastore' | 'internal' | 'http' | 'generic';
    /** DownloadAllResponse */
    DownloadAllResponse: {
      /** Packs */
      packs: components['schemas']['ITorrent'][];
      /** Complete */
      complete: [string, components['schemas']['ITorrent'][]][];
      /** Incomplete */
      incomplete: [string, components['schemas']['ITorrent'][]][];
    };
    /** DownloadPost */
    DownloadPost: {
      /** Tmdb Id */
      tmdb_id: number;
      /** Magnet */
      magnet: string;
      /** Season */
      season?: number | null;
      /** Episode */
      episode?: number | null;
    };
    /** DownloadSchema */
    DownloadSchema: {
      /** Id */
      id: number;
      /** Tmdb Id */
      tmdb_id: number;
      /** Transmission Id */
      transmission_id: string;
      /** Imdb Id */
      imdb_id: string;
      /** Type */
      type: string;
      /** Title */
      title: string;
      /**
       * Timestamp
       * Format: date-time
       */
      timestamp: string;
      added_by: components['schemas']['UserSchema'];
    };
    /** Episode */
    Episode: {
      /** Name */
      name: string;
      /** Id */
      id: number;
      /** Episode Number */
      episode_number: number;
      /** Air Date */
      air_date?: string | null;
    };
    /** EpisodeDetailsSchema */
    EpisodeDetailsSchema: {
      /** Id */
      id: number;
      download: components['schemas']['DownloadSchema'];
      /** Show Title */
      show_title: string;
      /** Season */
      season: number;
      /** Episode */
      episode: number | null;
    };
    /** EpisodeInfo */
    EpisodeInfo: {
      /** Seasonnum */
      seasonnum: number;
      /** Epnum */
      epnum?: number | null;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][];
    };
    /** HealthcheckResponse */
    HealthcheckResponse: {
      /** Component Name */
      component_name: string;
      component_type: components['schemas']['ComponentType'];
      status: components['schemas']['HealthcheckStatus'];
      /**
       * Time
       * Format: date-time
       */
      time: string;
      /** Output */
      output: unknown;
    };
    /**
     * HealthcheckStatus
     * @description Enum used to store the possible service and component health status.
     * @enum {string}
     */
    HealthcheckStatus: 'pass' | 'warn' | 'fail';
    /** ITorrent */
    ITorrent: {
      source: components['schemas']['ProviderSource'];
      /** Title */
      title: string;
      /** Seeders */
      seeders: number;
      /** Download */
      download: string;
      /** Category */
      category: string;
      episode_info?: components['schemas']['EpisodeInfo'] | null;
    };
    /** IndexResponse */
    IndexResponse: {
      /** Series */
      series: components['schemas']['SeriesDetails'][];
      /** Movies */
      movies: components['schemas']['MovieDetailsSchema'][];
    };
    /** InnerTorrent */
    InnerTorrent: {
      /** Eta */
      eta: number;
      /** Hashstring */
      hashString: string;
      /** Id */
      id: number;
      /** Percentdone */
      percentDone: number;
      /** Files */
      files: components['schemas']['InnerTorrentFile'][];
    };
    /** InnerTorrentFile */
    InnerTorrentFile: {
      /** Bytescompleted */
      bytesCompleted: number;
      /** Length */
      length: number;
      /** Name */
      name: string;
    };
    /**
     * MediaType
     * @enum {string}
     */
    MediaType: 'series' | 'movie';
    /** MonitorGet */
    MonitorGet: {
      /** Tmdb Id */
      tmdb_id: number;
      type: components['schemas']['MonitorMediaType'];
      /** Id */
      id: number;
      /** Title */
      title: string;
      added_by: components['schemas']['UserSchema'];
      /**
       * Status
       * @default false
       */
      status: boolean;
    };
    /**
     * MonitorMediaType
     * @enum {string}
     */
    MonitorMediaType: 'MOVIE' | 'TV';
    /** MonitorPost */
    MonitorPost: {
      /** Tmdb Id */
      tmdb_id: number;
      type: components['schemas']['MonitorMediaType'];
    };
    /** MovieDetailsSchema */
    MovieDetailsSchema: {
      /** Id */
      id: number;
      download: components['schemas']['DownloadSchema'];
    };
    /** MovieResponse */
    MovieResponse: {
      /** Title */
      title: string;
      /** Imdb Id */
      imdb_id: string;
    };
    /**
     * ProviderSource
     * @enum {string}
     */
    ProviderSource:
      | 'kickass'
      | 'horriblesubs'
      | 'rarbg'
      | 'torrentscsv'
      | 'nyaasi'
      | 'piratebay';
    /** SearchResponse */
    SearchResponse: {
      /** Title */
      title: string;
      type: components['schemas']['MediaType'];
      /** Year */
      year: number | null;
      /** Imdb Id */
      imdbID: number;
    };
    /** SeasonMeta */
    SeasonMeta: {
      /** Episode Count */
      episode_count: number;
      /** Season Number */
      season_number: number;
    };
    /** SeriesDetails */
    SeriesDetails: {
      /** Title */
      title: string;
      /** Imdb Id */
      imdb_id: string;
      /** Tmdb Id */
      tmdb_id: number;
      /** Seasons */
      seasons: {
        [key: string]: components['schemas']['EpisodeDetailsSchema'][];
      };
    };
    /** Stats */
    Stats: {
      /**
       * Episode
       * @default 0
       */
      episode: number;
      /**
       * Movie
       * @default 0
       */
      movie: number;
    };
    /** StatsResponse */
    StatsResponse: {
      /** User */
      user: string;
      values: components['schemas']['Stats'];
    };
    /** TvResponse */
    TvResponse: {
      /** Number Of Seasons */
      number_of_seasons: number;
      /** Seasons */
      seasons: components['schemas']['SeasonMeta'][];
      /** Imdb Id */
      imdb_id: string | null;
      /** Title */
      title: string;
    };
    /** TvSeasonResponse */
    TvSeasonResponse: {
      /** Episodes */
      episodes: components['schemas']['Episode'][];
    };
    /** UserSchema */
    UserSchema: {
      /** Username */
      username: string;
      /** First Name */
      first_name: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
}
