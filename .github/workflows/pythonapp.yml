name: Python application

on: [push]

jobs:
  build_backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - 3.11
          - 3.12

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache uv virtualenv
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}-2
      - name: Install uv
        run: |
          python -m pip install --upgrade uv
      - name: Install dependencies
        if: steps.cache-uv.outputs.cache-hit != 'true'
        run: |
          uv sync --dev --locked
      - name: Run mypy
        uses: liskin/gh-problem-matcher-wrap@v3
        with:
          linters: mypy
          run: uv run mypy --show-column-numbers rarbg_local
      - run: uv run alembic upgrade head --sql
      - name: Test with pytest
        run: |
          uv run pytest -vv
        env:
          CLOUDAMQP_URL: 'https://hello'
          TMDB_API_KEY: word
          TMDB_READ_ACCESS_TOKEN: word
          PYTEST_ADDOPTS: '--color=yes'
      - name: Archive test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: report-${{ matrix.python-version }}.html
          path: report.html

  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pre-commit/action@v3.0.1
