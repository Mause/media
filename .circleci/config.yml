# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build_frontend:
    docker:
      - image: circleci/node
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          command: |
            cd app
            yarn
            yarn test --ci --reporters jest-junit
            yarn build
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/"
      - store_artifacts:
          path: '**'
      - store_test_results:
          path: reports/*

  build_backend:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.8.0-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Pipfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Dependencies
          environment:
            PIPENV_VENV_IN_PROJECT: true
          command: |
            sudo pip3 install pipenv
            pipenv sync --dev
      - save_cache:
          paths:
            - '.venv'
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: Mypy
          environment:
            PIPENV_VENV_IN_PROJECT: 'true'
          command: |
            pipenv run mypy rarbg_local
      - run:
          name: Run Tests
          environment:
            PIPENV_VENV_IN_PROJECT: 'true'
            CLOUDAMQP_URL: 'https://hello'
          command: |
            mkdir screenshots
            pipenv run py.test -v --junitxml=test-reports/junit/junit.xml
      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: report.html
          destination: report.html

workflows:
  version: 2
  build_frontend:
    jobs:
      - build_frontend
  build_backend:
    jobs:
      - build_backend
